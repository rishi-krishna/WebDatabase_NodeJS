import { Project } from '../project.js';
export type Command = {
    type: 'build' | 'dev' | 'unknown';
    command: string;
};
/** A list of often used dev command names to identify if the command is a dev command */
export declare const NPM_DEV_SCRIPTS: string[];
/** A list of often used build command names to identify if the command is a build command */
export declare const NPM_BUILD_SCRIPTS: string[];
export interface BuildSystem {
    id: string;
    name: string;
    project: Project;
    version?: string;
    /** A function that can be implemented to override the dev and build commands of a framework like `nx run ...` */
    getCommands?(path: string): Promise<Command[]>;
    /** A function that can be implemented to override the dist location of a framework */
    getDist?(path: string): Promise<string>;
    /** The detect function that is called to check if this build system is in use */
    detect(): Promise<BuildSystem | undefined>;
}
export declare abstract class BaseBuildTool {
    project: Project;
    id: string;
    name: string;
    version?: string;
    configFiles: string[];
    constructor(project: Project);
    detect(): Promise<this | undefined>;
    /** Gets a JSON from the class information */
    toJSON(): {
        id: string;
        name: string;
        version: string | undefined;
    };
}
